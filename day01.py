#!/usr/bin/env python
# -*- coding: utf-8 -*-

INPUT = "522883333635584854991545936673798259831295958381745562154597678479248946819836599823272273487661233235237619" \
        "281355294981427594757577433952981197664436151779558699831924224161481362273425579756957157769923859266728742" \
        "816639822157288586941641968268775974397843457182126714651433839462452564833873992947991236817266988557731971" \
        "838927816876684448794876169743872255685788243322439372313129887625262664351723688399911566565693552167577286" \
        "651618589931713249471672361549347639711562768788766519478174637734146899595455451825291685922739769388525432" \
        "962881235561248759444552239585355173456749883838224861613796963797136961544359997358832638879289396992485531" \
        "643795231349255167154571426278473834351716654419719454717351515592724417544729647428215411495118164831787582" \
        "752581445375884619454887278994337228195299522277917381244418649111542647618867225324974447894686331791513683" \
        "219913286891789124359119571935472112911622916468825685362833923391967146878191316741562421415279386458533294" \
        "446842884917187687343362152424228948813567531354449824549863742413915378292572374524972874388549387779264857" \
        "667319688994956831723412586336918795378861184138835399987551917289632952434652726523176786883969669332827338" \
        "177272678294916611293295435692375748513936729869992298492597772497294427799168682321929593973431387483486179" \
        "617959165917472643235753311389621278156665915493941986679748834744855171948163257223163246357559159969638822" \
        "334421922832513423323853885428943775633184888724242338754221469115722672517968363896741567869762513817763344" \
        "476512622388547834895133263439829161213485285868394246617832992265582222542653435919169617763316796283984798" \
        "582667695541742661712628825536612316917467434841793215829133464676763776432322684277152359856242939993578978" \
        "821595836736246765244485412395197211835841762967945497868733713767549529576845171963199939861782828767193758" \
        "499869795942584588314573632381822512931184599721498766343337568962174666562918725251164396931528331626922283" \
        "5744532431378945137649959158495714472963839397214332815241141327714672141875129895"


def char_at(text, at):
    if at >= len(text):
        at -= len(text)
    return text[at]


def two_chars(text, halfway_around=False):
    step = len(text)//2 if halfway_around else 1
    for i in range(len(text)):
        yield (char_at(text, i), char_at(text, i+step))


def captcha(text, halfway_around=False):
    return sum(int(t) for t, u in two_chars(text, halfway_around) if t == u)

assert captcha('1122') == 3
assert captcha('1111') == 4
assert captcha('1234') == 0
assert captcha('91212129') == 9

print("Part One : {0}".format(captcha(INPUT)))

assert captcha('1212', halfway_around=True) == 6
assert captcha('1221', halfway_around=True) == 0
assert captcha('123425', halfway_around=True) == 4
assert captcha('123123', halfway_around=True) == 12
assert captcha('12131415', halfway_around=True) == 4

print("Part Two : {0}".format(captcha(INPUT, halfway_around=True)))